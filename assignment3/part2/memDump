--------------------------------------------------------------------------------
Command:            ./prog
Massif arguments:   (none)
ms_print arguments: massif.out.16397
--------------------------------------------------------------------------------


    KB
500.0^                  :::::::::::::::::::::::::::::::::::::::::::::::::::::#
     |                  :                                                    #
     |                  :                                                    #
     |                  :                                                    #
     |                  :                                                    #
     |                  :                                                    #
     |                  :                                                    #
     |                  :                                                    #
     |                  :                                                    #
     |                  :                                                    #
     |    ::::::::::::::@                                                    #
     |    :             @                                                    #
     |    :             @                                                    #
     |    :             @                                                    #
     |    :             @                                                    #
     | :::@             @                                                    #
     | :  @             @                                                    #
     | :  @             @                                                    #
     |:@  @             @                                                    #
     |@@  @             @                                                    #
   0 +----------------------------------------------------------------------->Gi
     0                                                                   142.4

Number of snapshots: 41
 Detailed snapshots: [3, 8, 13, 18, 23, 28, 33, 38 (peak)]

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  0              0                0                0             0            0
  1        113,085               24               16             8            0
  2        113,139            4,032            4,016            16            0
  3      7,204,940            4,032            4,016            16            0
99.60% (4,016B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->99.21% (4,000B) 0x400703: _initDynArr (dynamicArray.c:30)
| ->99.21% (4,000B) 0x4007B2: createDynArr (dynamicArray.c:51)
|   ->99.21% (4,000B) 0x401038: main (dynamicArrayMain.c:21)
|     
->00.40% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  4      7,204,940               24               16             8            0
  5      7,204,980                0                0             0            0
  6      7,205,025               24               16             8            0
  7      7,205,079            8,032            8,016            16            0
  8     35,378,583            8,032            8,016            16            0
99.80% (8,016B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->99.60% (8,000B) 0x400703: _initDynArr (dynamicArray.c:30)
| ->99.60% (8,000B) 0x4007B2: createDynArr (dynamicArray.c:51)
|   ->99.60% (8,000B) 0x401038: main (dynamicArrayMain.c:21)
|     
->00.20% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  9     35,378,583               24               16             8            0
 10     35,378,623                0                0             0            0
 11     35,378,668               24               16             8            0
 12     35,378,722           16,032           16,016            16            0
 13    147,722,295           16,032           16,016            16            0
99.90% (16,016B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->99.80% (16,000B) 0x400703: _initDynArr (dynamicArray.c:30)
| ->99.80% (16,000B) 0x4007B2: createDynArr (dynamicArray.c:51)
|   ->99.80% (16,000B) 0x401038: main (dynamicArrayMain.c:21)
|     
->00.10% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 14    147,722,295               24               16             8            0
 15    147,722,335                0                0             0            0
 16    147,722,380               24               16             8            0
 17    147,722,434           32,032           32,016            16            0
 18    596,406,172           32,032           32,016            16            0
99.95% (32,016B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->99.90% (32,000B) 0x400703: _initDynArr (dynamicArray.c:30)
| ->99.90% (32,000B) 0x4007B2: createDynArr (dynamicArray.c:51)
|   ->99.90% (32,000B) 0x401038: main (dynamicArrayMain.c:21)
|     
->00.05% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 19    596,406,172               24               16             8            0
 20    596,406,212                0                0             0            0
 21    596,406,257               24               16             8            0
 22    596,406,311           64,032           64,016            16            0
 23  2,389,770,028           64,032           64,016            16            0
99.98% (64,016B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->99.95% (64,000B) 0x400703: _initDynArr (dynamicArray.c:30)
| ->99.95% (64,000B) 0x4007B2: createDynArr (dynamicArray.c:51)
|   ->99.95% (64,000B) 0x401038: main (dynamicArrayMain.c:21)
|     
->00.02% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 24  2,389,770,028               24               16             8            0
 25  2,389,770,068                0                0             0            0
 26  2,389,770,113               24               16             8            0
 27  2,389,770,167          128,032          128,016            16            0
 28  9,560,493,967          128,032          128,016            16            0
99.99% (128,016B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->99.98% (128,000B) 0x400703: _initDynArr (dynamicArray.c:30)
| ->99.98% (128,000B) 0x4007B2: createDynArr (dynamicArray.c:51)
|   ->99.98% (128,000B) 0x401038: main (dynamicArrayMain.c:21)
|     
->00.01% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 29  9,560,493,967               24               16             8            0
 30  9,560,494,007                0                0             0            0
 31  9,560,494,052               24               16             8            0
 32  9,560,494,106          256,032          256,016            16            0
 33 38,237,937,792          256,032          256,016            16            0
99.99% (256,016B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->99.99% (256,000B) 0x400703: _initDynArr (dynamicArray.c:30)
| ->99.99% (256,000B) 0x4007B2: createDynArr (dynamicArray.c:51)
|   ->99.99% (256,000B) 0x401038: main (dynamicArrayMain.c:21)
|     
->00.01% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 34 38,237,937,792               24               16             8            0
 35 38,237,937,832                0                0             0            0
 36 38,237,937,877               24               16             8            0
 37 38,237,937,931          512,032          512,016            16            0
 38 152,936,821,770          512,032          512,016            16            0
100.00% (512,016B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->99.99% (512,000B) 0x400703: _initDynArr (dynamicArray.c:30)
| ->99.99% (512,000B) 0x4007B2: createDynArr (dynamicArray.c:51)
|   ->99.99% (512,000B) 0x401038: main (dynamicArrayMain.c:21)
|     
->00.00% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 39 152,936,821,770               24               16             8            0
 40 152,936,821,810                0                0             0            0
